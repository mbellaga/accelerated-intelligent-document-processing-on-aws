# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0


AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS GenAI IDP Accelerator - resources for IDP Pattern 1 (BDA)

Parameters:

  StackName:
    Type: String

  InputBucket:
    Type: String

  ConfigurationBucket:
    Type: String

  WorkingBucket:
    Type: String

  OutputBucket:
    Type: String

  TrackingTable:
    Type: String

  CustomerManagedEncryptionKeyArn:
    Type: String

  LogRetentionDays:
    Type: Number
  
  LogLevel:
    Type: String
    Default: WARN
    AllowedValues:
      - DEBUG
      - INFO
      - WARN
      - ERROR
      - CRITICAL
    Description: Default logging level for all Lambda functions
  
  ExecutionTimeThresholdMs:
    Type: Number
    Default: 30000

  BDAProjectArn:
    Type: String
    Default: ''
    Description: Bedrock Data Automation (BDA) project ARN

  IsSummarizationEnabled:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Enable or disable document summarization functionality

  UpdateConfigurationFunctionArn:
    Type: String

  ConfigurationTable:
    Type: String
    
  BedrockGuardrailId:
    Type: String
    Default: ""
    Description: "Optionally provide the Id (not name) of an existing Bedrock Guardrail to be used for Bedrock interactions"
    
  BedrockGuardrailVersion:
    Type: String
    Default: ""
    Description: "If you provided a Bedrock Guardrail Id above, provide the corresponding Guardrail version here"
    
  AppSyncApiUrl:
    Type: String
    Description: "URL of the AppSync GraphQL API for document status updates"
    
  AppSyncApiArn:
    Type: String
    Description: "ARN of the AppSync GraphQL API for document status updates"

  ConfigurationDefaultS3Uri:
    Type: String
    Description: "S3 URI (s3://bucket/path/config.json) to import default configuration from S3"

  ConfigLibraryHash:
    Type: String
    Description: "Hash token from config library to force updates when config library changes"
    
  EnableHITL:
    Type: String
    Default: "true"
    Description: "Enable Human In The Loop?"
    
  SageMakerA2IReviewPortalURL:
    Type: String
    Description: "SageMaker A2I Review Portal URL for HITL tasks"

  PermissionsBoundaryArn:
    Type: String
    Default: ""
    Description: >-
      (Optional) ARN of an existing IAM Permissions Boundary policy to attach to all IAM roles.
      Required by some organizations with Service Control Policies (SCPs).
      Format: arn:aws:iam::account-id:policy/policy-name
      Leave blank if no Permissions Boundary is required.
    AllowedPattern: "^(|arn:aws:iam::[0-9]{12}:policy/.+)$"
    ConstraintDescription: Must be empty or a valid IAM policy ARN

Conditions:
  IsSummarizationEnabled: !Equals [!Ref IsSummarizationEnabled, "true"]
  HasGuardrailConfig: !And [!Not [!Equals [!Ref BedrockGuardrailId, ""]], !Not [!Equals [!Ref BedrockGuardrailVersion, ""]]]
  HasPermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundaryArn, ""]]

Resources:

  # JSON Schema which defines the structure of the pattern configuration settings
  # used by the UI to allow the configuration to be inspected and customized.
  # For BDA, this is a no-op, since project configuration is contained in BDA project settings.
  UpdateSchemaConfig:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Ref UpdateConfigurationFunctionArn
      Schema:
        type: object
        required:
          - notes
        properties:
          notes:
            order: 1
            type: string
            description: Notes
          classes:
            order: 2
            type: array
            sectionLabel: Class definitions
            listLabel: Classes
            itemLabel: Class
            columns: 2
            items:
              type: object
              required:
                - name
                - description
                - attributes
              properties:
                name:
                  type: string
                  description: Class name
                description:
                  type: string
                  description: Class description
                examples:
                  type: array
                  description: Class few-shot examples
                  listLabel: Few-shot examples
                  itemLabel: Few-shot example
                  items:
                    type: object
                    required:
                      - name
                      - classPrompt
                      - attributesPrompt
                      - imagesPath
                    properties:
                      name:
                        type: string
                        description: Example name
                        order: 0
                      classPrompt:
                        type: string
                        description: Classification prompt as few-shot classification example for this class
                        order: 2
                      attributesPrompt:
                        type: string
                        description: Extraction prompt as few-shot attribute value extraction example for this class.
                        order: 3
                      imagePath:
                        type: string
                        description: Image(s) Path in the Configuration Bucket. Supports single files, or S3 prefixes for folders with multiple images. Optional but recommended for better visual understanding.
                        order: 4
                attributes:
                  type: array
                  listLabel: Attributes
                  itemLabel: Attribute
                  items:
                    type: object
                    required:
                      - name
                      - description
                      - attributeType
                    properties:
                      name:
                        type: string
                        description: Attribute name
                        order: 0
                      description:
                        type: string
                        description: Attribute description
                        order: 1
                      attributeType:
                        type: string
                        description: Type of attribute
                        enum: ["simple", "group", "list"]
                        order: 2
                      # Simple attribute properties (existing fields)
                      evaluation_method:
                        type: string
                        description: Evaluation Method
                        enum: ["", "LLM", "SEMANTIC", "FUZZY", "NUMERIC_EXACT", "EXACT"]
                        order: 3
                        dependsOn: {
                          field: "attributeType",
                          value: "simple"
                        }
                      evaluation_threshold:
                        type: number
                        description: Evaluation Threshold - used for SEMANTIC, and FUZZY methods
                        minimum: 0
                        maximum: 1
                        order: 5
                        dependsOn: {
                          field: "evaluation_method",
                          values: ["SEMANTIC", "FUZZY"]
                        }
                      confidence_threshold:
                        type: number
                        description: Confidence threshold for this specific attribute (0.0 to 1.0). If not set, the default confidence threshold from assessment section will be used.
                        minimum: 0
                        maximum: 1
                        order: 6
                        dependsOn: {
                          field: "attributeType",
                          value: "simple"
                        }
                      # Group-specific properties
                      groupAttributes:
                        type: array
                        listLabel: Group Attributes
                        itemLabel: Attribute
                        order: 7
                        dependsOn: {
                          field: "attributeType",
                          value: "group"
                        }
                        items:
                          type: object
                          required:
                            - name
                            - description
                          properties:
                            name:
                              type: string
                              description: Attribute name
                              order: 0
                            description:
                              type: string
                              description: Attribute description
                              order: 1
                            evaluation_method:
                              type: string
                              description: Evaluation Method
                              enum: ["", "LLM", "SEMANTIC", "FUZZY", "NUMERIC_EXACT", "EXACT"]
                              order: 2
                            evaluation_threshold:
                              type: number
                              description: Evaluation Threshold - used for SEMANTIC, and FUZZY methods
                              minimum: 0
                              maximum: 1
                              order: 4
                              dependsOn: {
                                field: "evaluation_method",
                                values: ["SEMANTIC", "FUZZY"]
                              }
                            confidence_threshold:
                              type: number
                              description: Confidence threshold for this specific attribute (0.0 to 1.0). If not set, the default confidence threshold from assessment section will be used.
                              minimum: 0
                              maximum: 1
                              order: 5
                          columns: 2
                      # List-specific properties
                      listItemTemplate:
                        type: object
                        sectionLabel: List Item Template
                        order: 8
                        dependsOn: {
                          field: "attributeType",
                          value: "list"
                        }
                        required:
                          - itemAttributes
                        properties:
                          itemDescription:
                            type: string
                            description: Description of each list item
                            order: 0
                          itemAttributes:
                            type: array
                            listLabel: Item Attributes
                            itemLabel: Attribute
                            order: 1
                            items:
                              type: object
                              required:
                                - name
                                - description
                              properties:
                                name:
                                  type: string
                                  description: Attribute name
                                  order: 0
                                description:
                                  type: string
                                  description: Attribute description
                                  order: 1
                                evaluation_method:
                                  type: string
                                  description: Evaluation Method
                                  enum: ["", "LLM", "SEMANTIC", "FUZZY", "NUMERIC_EXACT", "EXACT"]
                                  order: 2
                                evaluation_threshold:
                                  type: number
                                  description: Evaluation Threshold - used for SEMANTIC, and FUZZY methods
                                  minimum: 0
                                  maximum: 1
                                  order: 4
                                  dependsOn: {
                                    field: "evaluation_method",
                                    values: ["SEMANTIC", "FUZZY"]
                                  }
                                confidence_threshold:
                                  type: number
                                  description: Confidence threshold for this specific attribute (0.0 to 1.0). If not set, the default confidence threshold from assessment section will be used.
                                  minimum: 0
                                  maximum: 1
                                  order: 5
                              columns: 2
                    # This controls the layout of the form fields inside each attribute item
                    columns: 2
          evaluation:
            order: 3
            type: object
            sectionLabel: Evaluation Inference
            properties:
              llm_method:
                type: object
                properties:
                  model:
                    type: string
                    description: Bedrock model ID
                    enum: ["us.amazon.nova-lite-v1:0", "us.amazon.nova-pro-v1:0", "us.amazon.nova-premier-v1:0", "us.anthropic.claude-3-haiku-20240307-v1:0", "us.anthropic.claude-3-5-sonnet-20241022-v2:0", "us.anthropic.claude-3-7-sonnet-20250219-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0", "us.anthropic.claude-opus-4-20250514-v1:0", "us.anthropic.claude-opus-4-1-20250805-v1:0"]
                    order: 1
                  temperature:
                    type: number
                    description: Sampling temperature
                    order: 2
                  top_k:
                    type: number
                    description: Sampling Top K
                    order: 3
                  top_p:
                    type: number
                    description: Sampling Top P
                    order: 4
                  max_tokens:
                    type: number
                    description: Max tokens
                    order: 5
                  system_prompt:
                    type: string
                    format: textarea
                    description: System prompt for LLM evaluation
                    order: 6
                  task_prompt:
                    type: string
                    format: textarea
                    description: Task prompt for LLM evaluation - supports parameters {DOCUMENT_CLASS}, {ATTRIBUTE_NAME}, {ATTRIBUTE_DESCRIPTION}, {EXPECTED_VALUE} and {ACTUAL_VALUE}
                    order: 7
          assessment:
            order: 4
            type: object
            sectionLabel: Assessment & HITL Configuration
            properties:
              default_confidence_threshold:
                type: number
                description: HITL Confidence Threshold (0.0-1.0) - Documents with confidence below this threshold will be sent for Human In The Loop review
                minimum: 0.0
                maximum: 1.0
                order: 1
          summarization:
            order: 5
            type: object
            sectionLabel: Summarization Inference
            properties:
              model:
                type: string
                description: Bedrock model ID
                enum: ["us.amazon.nova-lite-v1:0", "us.amazon.nova-pro-v1:0", "us.amazon.nova-premier-v1:0", "us.anthropic.claude-3-haiku-20240307-v1:0", "us.anthropic.claude-3-5-sonnet-20241022-v2:0", "us.anthropic.claude-3-7-sonnet-20250219-v1:0", "us.anthropic.claude-sonnet-4-20250514-v1:0", "us.anthropic.claude-opus-4-20250514-v1:0", "us.anthropic.claude-opus-4-1-20250805-v1:0"]
                order: 1
              temperature:
                type: number
                description: Sampling temperature
                order: 2
              top_k:
                type: number
                description: Sampling Top K
                order: 3
              top_p:
                type: number
                description: Sampling Top P
                order: 4
              max_tokens:
                type: number
                description: Max tokens
                order: 5
              system_prompt:
                type: string
                format: textarea
                description: System prompt
                order: 6
              task_prompt:
                type: string
                format: textarea
                description: Task prompt - supports parameter {DOCUMENT_TEXT}. Optionally use <<CACHEPOINT>> to separate static and dynamic elements of prompt for Bedrock prompt caching.
                order: 7
          pricing:
            order: 6
            type: array
            sectionLabel: Pricing Estimates - check https://aws.amazon.com/bedrock/pricing/
            listLabel: Services
            itemLabel: Service/API
            columns: 2
            items:
              type: object
              required:
                - name
                - units
              properties:
                name:
                  type: string
                  description: Service/API
                units:
                  type: array
                  listLabel: Metered unit pricing
                  itemLabel: Metered Unit price
                  items:
                    type: object
                    required:
                      - name
                      - price
                    properties:
                      name:
                        type: string
                        description: Metered unit name
                      price:
                        type: number
                        description: Estimated cost/unit
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  UpdateDefaultConfig:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Ref UpdateConfigurationFunctionArn
      Default: !Ref ConfigurationDefaultS3Uri
      ConfigLibraryHash: !Ref ConfigLibraryHash


  DocumentProcessingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      Name: !Sub "${AWS::StackName}-DocumentProcessingWorkflow"
      DefinitionUri: statemachine/workflow.asl.json
      DefinitionSubstitutions:
        InvokeBDALambdaArn: !GetAtt InvokeBDAFunction.Arn
        ProcessResultsLambdaArn: !GetAtt ProcessResultsFunction.Arn
        HITLWaitFunctionArn: !GetAtt HITLWaitFunction.Arn
        HITLStatusUpdateFunctionArn: !GetAtt HITLStatusUpdateFunction.Arn
        IsSummarizationEnabled: !If [IsSummarizationEnabled, "true", "false"]
        SummarizationLambdaArn: !GetAtt SummarizationFunction.Arn
        EnableHITL: !Ref EnableHITL
        OutputBucket: !Ref OutputBucket
        WorkingBucket: !Ref WorkingBucket
        BDAProjectArn: !Ref BDAProjectArn
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup: !GetAtt StateMachineLogGroup.Arn
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref InvokeBDAFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessResultsFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SummarizationFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HITLWaitFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HITLStatusUpdateFunction
        - CloudWatchLogsFullAccess

  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/aws/vendedlogs/states/${AWS::StackName}/workflow"  # required prefix
      RetentionInDays: !Ref LogRetentionDays

  InvokeBDAFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/bda_invoke_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          TRACKING_TABLE: !Ref TrackingTable
          METRIC_NAMESPACE: !Ref StackName
          MAX_WORKERS: 20
          LOG_LEVEL: !Ref LogLevel
      LoggingConfig:
        LogGroup: !Ref InvokeBDAFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - DynamoDBCrudPolicy:
           TableName: !Ref TrackingTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          - Effect: Allow
            Action: bedrock:InvokeDataAutomationAsync
            Resource: 
              - !Ref BDAProjectArn
              - !Sub "arn:aws:bedrock:us-east-1:${AWS::AccountId}:data-automation-profile/us.data-automation-v1"
              - !Sub "arn:aws:bedrock:us-east-2:${AWS::AccountId}:data-automation-profile/us.data-automation-v1"
              - !Sub "arn:aws:bedrock:us-west-1:${AWS::AccountId}:data-automation-profile/us.data-automation-v1"
              - !Sub "arn:aws:bedrock:us-west-2:${AWS::AccountId}:data-automation-profile/us.data-automation-v1"
  
  InvokeBDAFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/InvokeBDAFunction"
      RetentionInDays: !Ref LogRetentionDays
  
  ProcessResultsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"    
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/processresults_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          ENABLE_HITL: !Ref EnableHITL
          DB_NAME: !Ref BDAMetadataTable
          BDA_PROJECT_ARN: !Ref BDAProjectArn
          WORKING_BUCKET: !Ref WorkingBucket
          SAGEMAKER_A2I_REVIEW_PORTAL_URL: !Ref SageMakerA2IReviewPortalURL
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
      LoggingConfig:
        LogGroup: !Ref ProcessResultsFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref BDAMetadataTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # AppSync permissions for updating document status
          - Effect: Allow
            Action:
              - appsync:GraphQL
            Resource: 
              - !Sub "${AppSyncApiArn}/types/Mutation/*"
          - Effect: Allow
            Action:
              - sagemaker:StartHumanLoop
            Resource: 'arn:aws:sagemaker:*:*:flow-definition/*'
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:PutParameter
              - ssm:GetParametersByPath
            Resource: '*'
          - Effect: Allow
            Action:
              - bedrock:GetDataAutomationProject
              - bedrock:ListDataAutomationProjects
              - bedrock:GetBlueprint
              - bedrock:GetBlueprintRecommendation
            Resource: '*'

  
  ProcessResultsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/ProcessResultsFunction"
      RetentionInDays: !Ref LogRetentionDays

  SummarizationFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"    
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/summarization_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          METRIC_NAMESPACE: !Ref StackName
          CONFIGURATION_TABLE_NAME: !Ref ConfigurationTable
          GUARDRAIL_ID_AND_VERSION: !If [HasGuardrailConfig, !Sub "${BedrockGuardrailId}:${BedrockGuardrailVersion}", ""]
          LOG_LEVEL: !Ref LogLevel
          APPSYNC_API_URL: !Ref AppSyncApiUrl
          WORKING_BUCKET: !Ref WorkingBucket
      LoggingConfig:
        LogGroup: !Ref SummarizationFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref InputBucket
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref ConfigurationTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn
          # AppSync permissions for updating document status
          - Effect: Allow
            Action:
              - appsync:GraphQL
            Resource: 
              - !Sub "${AppSyncApiArn}/types/Mutation/*"
          - Effect: Allow
            Action: bedrock:InvokeModel
            Resource: 
                - !Sub "arn:aws:bedrock:*::foundation-model/*"
                - !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*"
          - !If
            - HasGuardrailConfig
            - Effect: Allow
              Action: bedrock:ApplyGuardrail
              Resource: !Sub "arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/${BedrockGuardrailId}"
            - !Ref AWS::NoValue

  SummarizationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/SummarizationFunction"
      RetentionInDays: !Ref LogRetentionDays

  BDACompletionFunctionDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref CustomerManagedEncryptionKeyArn
      VisibilityTimeout: 30
      MessageRetentionPeriod: 345600 # 4 days

  BDACompletionFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/bda_completion_function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 900
      MemorySize: 4096
      Environment:
        Variables:
          TRACKING_TABLE: !Ref TrackingTable
          METRIC_NAMESPACE: !Ref StackName
          LOG_LEVEL: !Ref LogLevel
      DeadLetterQueue:
       Type: SQS
       TargetArn: !GetAtt BDACompletionFunctionDLQ.Arn
      LoggingConfig:
        LogGroup: !Ref BDACompletionFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
           TableName: !Ref TrackingTable
        - Statement:
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
          - Effect: Allow
            Action: 
              - states:SendTaskSuccess
              - states:SendTaskFailure
            Resource: !GetAtt DocumentProcessingStateMachine.Arn
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn

  
  BDACompletionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/BDACompletionFunction"
      RetentionInDays: !Ref LogRetentionDays

  BDAEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.bedrock
        detail-type:
          - Bedrock Data Automation Job Succeeded
          - Bedrock Data Automation Job Failed With Client Error
          - Bedrock Data Automation Job Failed With Service Error
      State: ENABLED
      Targets:
        - Arn: !GetAtt BDACompletionFunction.Arn
          Id: BDACompletionFunction
          RetryPolicy:
            MaximumRetryAttempts: 3

  BDAEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref BDACompletionFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt BDAEventRule.Arn

  # DynamoDB Table for BDA process records metadata
  BDAMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: execution_id
          AttributeType: S
        - AttributeName: record_number
          AttributeType: N
      KeySchema:
        - AttributeName: execution_id
          KeyType: HASH
        - AttributeName: record_number
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ExpiresAfter
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !Ref CustomerManagedEncryptionKeyArn
  
  #EventBridge Rule to check Human In the Loop Status change
  HITLEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Rule for SageMaker A2I HumanLoop Status Change'
      EventPattern:
        detail-type:
          - 'SageMaker A2I HumanLoop Status Change'
        source:
          - 'aws.sagemaker'
        detail:
          humanLoopStatus:
            - 'Completed'
      State: 'ENABLED'
      Targets:
        - Arn: !GetAtt HITLProcessLambdaFunction.Arn
          Id: 'HITLProcessLambdaTarget'

  HITLProcessLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/HITLProcessLambdaFunction"
      RetentionInDays: !Ref LogRetentionDays

  HITLProcessLambdaFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: "Function does not require VPC access as it only interacts with AWS services via APIs"
          - id: W92
            reason: "Function does not require reserved concurrency as it scales based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for Cfn Custom Resource function"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      Handler: index.lambda_handler
      LoggingConfig:
        LogGroup: !Ref HITLProcessLambdaLogGroup
      Runtime: python3.12
      Timeout: 300
      CodeUri: src/hitl-process-function/
      Role: !GetAtt HITLProcessLambdaRole.Arn
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref BDAMetadataTable
          TRACKING_TABLE: !Ref TrackingTable
          LOG_LEVEL: !Ref LogLevel

  HITLProcessLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      Policies:
        - PolicyName: HITLProcessLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:GetRecords
                  - dynamodb:UpdateItem
                  - dynamodb:UpdateTable
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BDAMetadataTable}'
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:GetRecords
                  - dynamodb:UpdateItem
                  - dynamodb:UpdateTable
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TrackingTable}'
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub "arn:aws:s3:::${InputBucket}"
                  - !Sub "arn:aws:s3:::${InputBucket}/*"
                  - !Sub "arn:aws:s3:::${WorkingBucket}"
                  - !Sub "arn:aws:s3:::${WorkingBucket}/*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetBucketLocation
                  - s3:GetObject
                Resource:
                  - !Sub "arn:aws:s3:::${OutputBucket}"
                  - !Sub "arn:aws:s3:::${OutputBucket}/*"
              - Effect: Allow
                Action: 
                  - states:SendTaskSuccess
                  - states:SendTaskFailure
                Resource: !GetAtt DocumentProcessingStateMachine.Arn
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                Resource: !Ref CustomerManagedEncryptionKeyArn

  HITLWaitFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
    # checkov:skip=CKV_AWS_116: "DLQ not required for this function as StepFunctions will handle retries"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/hitl-wait-function/
      Handler: index.lambda_handler
      Runtime: python3.12
      Timeout: 60
      MemorySize: 256
      Environment:
        Variables:
          TRACKING_TABLE: !Ref TrackingTable
          DYNAMODB_TABLE: !Ref BDAMetadataTable
          LOG_LEVEL: !Ref LogLevel
          SAGEMAKER_A2I_REVIEW_PORTAL_URL: !Ref SageMakerA2IReviewPortalURL
          WORKING_BUCKET: !Ref WorkingBucket
      LoggingConfig:
        LogGroup: !Ref HITLWaitFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref TrackingTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BDAMetadataTable
        - S3ReadPolicy:
            BucketName: !Ref WorkingBucket
        - Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !Ref CustomerManagedEncryptionKeyArn
          - Effect: Allow
            Action: cloudwatch:PutMetricData
            Resource: '*'
  
  HITLWaitFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/HITLWaitFunction"
      RetentionInDays: !Ref LogRetentionDays

  HITLStatusUpdateFunction:
    Type: AWS::Serverless::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Cloudwatch does not support resource-level permissions"
          - id: W89
            reason: "This Lambda function does not require VPC access as it only interacts with AWS services via AWS APIs"
          - id: W92
            reason: "Function does not require concurrent execution limits as it is designed to scale based on demand"
          - id: W58
            reason: "DLQ not required for EventBridge triggered function as it handles A2I status updates"
    # checkov:skip=CKV_AWS_116: "DLQ not required for EventBridge triggered function as it handles A2I status updates"
    # checkov:skip=CKV_AWS_117: "Function does not require VPC access as it only interacts with AWS services via APIs"
    # checkov:skip=CKV_AWS_115: "Function does not require reserved concurrency as it scales based on demand"
    # checkov:skip=CKV_AWS_173: "Environment variables do not contain sensitive data - only configuration values like feature flags and non-sensitive settings"
    Properties:
      PermissionsBoundary: !If [HasPermissionsBoundary, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      CodeUri: src/hitl-status-update-function/
      Handler: index.handler
      Runtime: python3.12
      Timeout: 300
      MemorySize: 512
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          WORKING_BUCKET: !Ref WorkingBucket
      LoggingConfig:
        LogGroup: !Ref HITLStatusUpdateFunctionLogGroup
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3CrudPolicy:
            BucketName: !Ref WorkingBucket
        - Statement:
          - Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !Ref CustomerManagedEncryptionKeyArn

  HITLStatusUpdateFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !Ref CustomerManagedEncryptionKeyArn
      LogGroupName: !Sub "/${AWS::StackName}/lambda/HITLStatusUpdateFunction"
      RetentionInDays: !Ref LogRetentionDays

  #Event Bridge permissions to invoke Lambda function during HITL change 
  EventBridgeInvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref HITLProcessLambdaFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt HITLEventRule.Arn


  Dashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub "${AWS::StackName}-${AWS::Region}-Pattern1-Subset"
      DashboardBody: !Sub |
        {
          "widgets": [

            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Total per Minute"}],
                  [{"expression": "m2/PERIOD(m2)*60", "label": "Succeeded per Minute"}],
                  [{"expression": "m3/PERIOD(m3)*60", "label": "Failed per Minute"}],
                  ["${StackName}", "BDARequestsTotal", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "BDARequestsSucceeded", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "BDARequestsFailed", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "BDA API Request Status (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 0,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Throttles per Minute"}],
                  [{"expression": "m2/PERIOD(m2)*60", "label": "Retry Success per Minute"}],
                  [{"expression": "m3/PERIOD(m3)*60", "label": "Max Retries Exceeded per Minute"}],
                  ["${StackName}", "BDARequestsThrottles", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "BDARequestsRetrySuccess", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "BDARequestsMaxRetriesExceeded", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "BDA API Request Retries (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 0,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Total per Minute"}],
                  [{"expression": "m2/PERIOD(m2)*60", "label": "Succeeded per Minute"}],
                  [{"expression": "m3/PERIOD(m3)*60", "label": "Failed per Minute"}],
                  ["${StackName}", "BDAJobsTotal", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "BDAJobsSucceeded", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "BDAJobsFailed", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "BDA Job Executions (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${ProcessResultsFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "ProcessResults Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 6,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${InvokeBDAFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "InvokeBDAFunction Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Tokens per Minute (TPM)"}],
                  [{"expression": "m2/PERIOD(m1)*60", "label": "Cache Read TPM"}],
                  [{"expression": "m3/PERIOD(m1)*60", "label": "Cache Write TPM"}],
                  ["${StackName}", "InputTokens", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "CacheReadInputTokens", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "CacheWriteInputTokens", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Input Tokens (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 6,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Tokens per Minute (TPM)"}],
                  ["${StackName}", "OutputTokens", {"id": "m1", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Output Tokens (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 6,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Tokens per Minute"}],
                  ["${StackName}", "TotalTokens", {"id": "m1", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Total Tokens (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 12,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Total per Minute"}],
                  [{"expression": "m2/PERIOD(m2)*60", "label": "Succeeded per Minute"}],
                  [{"expression": "m3/PERIOD(m3)*60", "label": "Failed per Minute"}],
                  ["${StackName}", "BedrockRequestsTotal", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "BedrockRequestsSucceeded", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "BedrockRequestsFailed", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Bedrock Request Status (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 8,
              "y": 12,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  [{"expression": "m1/PERIOD(m1)*60", "label": "Throttles per Minute"}],
                  [{"expression": "m2/PERIOD(m2)*60", "label": "Retry Success per Minute"}],
                  [{"expression": "m3/PERIOD(m3)*60", "label": "Max Retries Exceeded per Minute"}],
                  ["${StackName}", "BedrockThrottles", {"id": "m1", "stat": "Sum", "visible": false}],
                  [".", "BedrockRetrySuccess", {"id": "m2", "stat": "Sum", "visible": false}],
                  [".", "BedrockMaxRetriesExceeded", {"id": "m3", "stat": "Sum", "visible": false}]
                ],
                "region": "${AWS::Region}",
                "title": "Bedrock Retries (per Minute)",
                "view": "timeSeries",
                "period": 60,
                "yAxis": {
                  "left": {
                    "label": "Count per Minute"
                  }
                }
              }
            },
            {
              "type": "metric",
              "x": 16,
              "y": 12,
              "width": 8,
              "height": 6,
              "properties": {
                "metrics": [
                  ["${StackName}", "BedrockRequestLatency", {"stat": "Average"}],
                  [".", "BedrockRequestLatency", {"stat": "p90"}],
                  [".", "BedrockRequestLatency", {"stat": "Maximum"}],
                  [".", "BedrockTotalLatency", {"stat": "Average"}],
                  [".", "BedrockTotalLatency", {"stat": "p90"}],
                  [".", "BedrockTotalLatency", {"stat": "Maximum"}]
                ],
                "region": "${AWS::Region}",
                "title": "Bedrock Latency - per request, and total (including backoff/retries)",
                "period": 300,
                "view": "timeSeries",
                "stacked": false,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                }
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 12,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${InvokeBDAFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "InvokeBDA Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 12,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${InvokeBDAFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "InvokeBDA Lambda Errors",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 18,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${ProcessResultsFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "ProcessResults Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 18,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${ProcessResultsFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "ProcessResults Lambda Errors",
                "view": "table"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 24,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${SummarizationFunction}"]
                ],
                "region": "${AWS::Region}",
                "title": "Summarization Function Duration",
                "period": 300,
                "annotations": {
                  "horizontal": [{
                    "value": ${ExecutionTimeThresholdMs},
                    "label": "Threshold (${ExecutionTimeThresholdMs}ms)",
                    "color": "#ff0000"
                  }]
                },
                "stat": "Average",
                "view": "timeSeries"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 30,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${SummarizationFunctionLogGroup}' | filter @type = \"REPORT\" | fields @timestamp, @logStream, @billedDuration, @maxMemoryUsed/1024/1024 as memoryUsedMB | filter @billedDuration > ${ExecutionTimeThresholdMs} | sort by @billedDuration desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Summarization Lambda Long Running Invocations",
                "view": "table"
              }
            },
            {
              "type": "log",
              "x": 12,
              "y": 30,
              "width": 12,
              "height": 6,
              "properties": {
                "query": "SOURCE '${SummarizationFunctionLogGroup}' | fields @timestamp, @logStream, @message | filter @message like /ERROR/ or @message like /Task timed out/ | parse @message /RequestId: (?<requestId>[^ ]*)/ | sort @timestamp desc | limit 20",
                "region": "${AWS::Region}",
                "title": "Summarization Lambda Errors",
                "view": "table"
              }
            }

          ]
        }

Outputs:

  # Outputs required by main template

  StateMachineName:
    Description: Step Functions State machine Name
    Value: !GetAtt DocumentProcessingStateMachine.Name

  StateMachineArn:
    Description: Step Functions State machine ARN
    Value: !GetAtt DocumentProcessingStateMachine.Arn
  
  StateMachineLogGroup:
    Description: Step Functions State machine LogGroup
    Value: !Ref StateMachineLogGroup

  DashboardName:
    Description: Name of the Pattern 1 (BDA) CloudWatch Dashboard
    Value: !Ref Dashboard

  DashboardArn:
    Description: ARN of the Pattern 1 (BDA) CloudWatch Dashboard
    Value: !Sub "arn:aws:cloudwatch::${AWS::AccountId}:dashboard/${Dashboard}"
