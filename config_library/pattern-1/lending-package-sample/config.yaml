# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

notes: Processing configuration in BDA project.
assessment:
  default_confidence_threshold: '0.8'
summarization:
  top_p: '0.1'
  max_tokens: '4096'
  top_k: '5'
  task_prompt: >-
    <document_ocr_data>

    {DOCUMENT_TEXT}

    </document_ocr_data>

    Analyze the provided document (<document_ocr_data>) and create a comprehensive summary.

    CRITICAL INSTRUCTION: You MUST return your response as valid JSON with the
    EXACT structure shown at the end of these instructions. Do not include any
    explanations, notes, or text outside of the JSON structure.

    Create a summary that captures the essential information from the document.
    Your summary should:

    1. Extract key information, main points, and important details

    2. Maintain the original document's organizational structure where
    appropriate

    3. Preserve important facts, figures, dates, and entities

    4. Reduce the length while retaining all critical information

    5. Use markdown formatting for better readability (headings, lists,
    emphasis, etc.)

    6. Cite all relevant facts from the source document using inline citations
    in the format [Cite-X, Page-Y] where X is a sequential citation number and Y
    is the page number

    7. Format citations as markdown links that reference the full citation list
    at the bottom of the summary
      Example: [[Cite-1, Page-3]](#cite-1-page-3)

    8. At the end of the summary, include a "References" section that lists all
    citations with their exact text from the source document in the format:
      [Cite-X, Page-Y]: Exact text from the document

    Output Format:

    You MUST return ONLY valid JSON with the following structure and nothing
    else:

    ```json
    {
      "summary": "A comprehensive summary in markdown format with inline citations linked to a references section at the bottom"
    }
    ```

    Do not include any text, explanations, or notes outside of this JSON
    structure. The JSON must be properly formatted and parseable.
  temperature: '0.0'
  model: us.amazon.nova-premier-v1:0
  system_prompt: >-
    You are a document summarization expert who can analyze and summarize documents from various domains including medical, financial, legal, and general business documents. Your task is to create a summary that captures the key information, main points, and important details from the document. Your output must be in valid JSON format. \nSummarization Style: Balanced\\nCreate a balanced summary that provides a moderate level of detail. Include the main points and key supporting information, while maintaining the document's overall structure. Aim for a comprehensive yet concise summary.\n Your output MUST be in valid JSON format with markdown content. You MUST strictly adhere to the output format specified in the instructions.
evaluation:
  llm_method:
    top_p: '0.1'
    max_tokens: '4096'
    top_k: '5'
    task_prompt: >-
      I need to evaluate attribute extraction for a document of class: {DOCUMENT_CLASS}.


      For the attribute named "{ATTRIBUTE_NAME}" described as "{ATTRIBUTE_DESCRIPTION}":

      - Expected value: {EXPECTED_VALUE}

      - Actual value: {ACTUAL_VALUE}


      Do these values match in meaning, taking into account formatting differences, word order, abbreviations, and semantic equivalence?

      Provide your assessment as a JSON with three fields:

      - "match": boolean (true if they match, false if not)

      - "score": number between 0 and 1 representing the confidence/similarity score

      - "reason": brief explanation of your decision


      Respond ONLY with the JSON and nothing else. Here's the exact format:

      {
        "match": true or false,
        "score": 0.0 to 1.0,
        "reason": "Your explanation here"
      }
    temperature: '0.0'
    model: us.anthropic.claude-3-haiku-20240307-v1:0
    system_prompt: >-
      You are an evaluator that helps determine if the predicted and expected values match for document attribute extraction. You will consider the context and meaning rather than just exact string matching.
pricing:
  - name: bda/documents-custom
    units:
      - name: pages
        price: '0.04'
  - name: bda/documents-standard
    units:
      - name: pages
        price: '0.01'
  - name: bedrock/us.amazon.nova-lite-v1:0
    units:
      - name: inputTokens
        price: '6.0E-8'
      - name: outputTokens
        price: '2.4E-7'
      - name: cacheReadInputTokens
        price: '1.5E-8'
      - name: cacheWriteInputTokens
        price: '6.0E-8'
  - name: bedrock/us.amazon.nova-pro-v1:0
    units:
      - name: inputTokens
        price: '8.0E-7'
      - name: outputTokens
        price: '3.2E-6'
      - name: cacheReadInputTokens
        price: '2.0E-7'
      - name: cacheWriteInputTokens
        price: '8.0E-7'
  - name: bedrock/us.amazon.nova-premier-v1:0
    units:
      - name: inputTokens
        price: '2.5E-6'
      - name: outputTokens
        price: '1.25E-5'
  - name: bedrock/us.anthropic.claude-3-haiku-20240307-v1:0
    units:
      - name: inputTokens
        price: '2.5E-7'
      - name: outputTokens
        price: '1.25E-6'
  - name: bedrock/us.anthropic.claude-3-5-haiku-20241022-v1:0
    units:
      - name: inputTokens
        price: '8.0E-7'
      - name: outputTokens
        price: '4.0E-6'
      - name: cacheReadInputTokens
        price: '8.0E-8'
      - name: cacheWriteInputTokens
        price: '1.0E-6'
  - name: bedrock/us.anthropic.claude-3-5-sonnet-20241022-v2:0
    units:
      - name: inputTokens
        price: '3.0E-6'
      - name: outputTokens
        price: '1.5E-5'
      - name: cacheReadInputTokens
        price: '3.0E-7'
      - name: cacheWriteInputTokens
        price: '3.75E-6'
  - name: bedrock/us.anthropic.claude-3-7-sonnet-20250219-v1:0
    units:
      - name: inputTokens
        price: '3.0E-6'
      - name: outputTokens
        price: '1.5E-5'
      - name: cacheReadInputTokens
        price: '3.0E-7'
      - name: cacheWriteInputTokens
        price: '3.75E-6'
  - name: bedrock/us.anthropic.claude-sonnet-4-20250514-v1:0
    units:
      - name: inputTokens
        price: '3.0E-6'
      - name: outputTokens
        price: '1.5E-5'
      - name: cacheReadInputTokens
        price: '3.0E-7'
      - name: cacheWriteInputTokens
        price: '3.75E-6'
  - name: bedrock/us.anthropic.claude-opus-4-20250514-v1:0
    units:
      - name: inputTokens
        price: '1.5E-5'
      - name: outputTokens
        price: '7.5E-5'
      - name: cacheReadInputTokens
        price: '1.5E-6'
      - name: cacheWriteInputTokens
        price: '1.875E-5'
  - name: bedrock/us.anthropic.claude-opus-4-1-20250805-v1:0
    units:
      - name: inputTokens
        price: '1.5E-5'
      - name: outputTokens
        price: '7.5E-5'
      - name: cacheReadInputTokens
        price: '1.5E-6'
      - name: cacheWriteInputTokens
        price: '1.875E-5'
